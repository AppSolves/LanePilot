# syntax=docker/dockerfile:1

# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Dockerfile reference guide at
# https://docs.docker.com/go/dockerfile-reference/

# Want to help us make this template better? Share your feedback here: https://forms.gle/ybq9Krt8jtBL3iCk7

ARG L4T_VERSION=r36.2.0
FROM nvcr.io/nvidia/l4t-base:${L4T_VERSION} AS base

ENV PYTHONUNBUFFERED=1
# TODO: Test whether this is needed.
ENV PYTHONDONTWRITEBYTECODE=0
ENV UDP_PORT=8000 TCP_PORT=8001

WORKDIR /app

# Create a non-privileged user that the app will run under.
# See https://docs.docker.com/go/dockerfile-user-best-practices/
ARG UID=10001
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    appuser

# Download dependencies as a separate step to take advantage of Docker's caching.
# Leverage a cache mount to /root/.cache/pip to speed up subsequent builds.
# Leverage a bind mount to requirements.txt to avoid having to copy them into
# into this layer.
RUN --mount=type=cache,target=/root/.cache/pip \
    --mount=type=bind,source=requirements.txt,target=requirements.txt \
    python -m pip install -r requirements.txt

# Give the user permission to access the entire /app directory.
RUN chown -R appuser:appuser /app

# Switch to the non-privileged user to run the application.
USER appuser

# Copy the source code into the container.
COPY --from=root / /app
COPY . .

# Expose the port that the application listens on.
EXPOSE ${UDP_PORT}/udp
EXPOSE ${TCP_PORT}/tcp

# Run the application.
CMD ["python", "-m", "src.main"]